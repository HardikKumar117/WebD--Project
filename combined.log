{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"error","message":"error in db connection","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"error","message":"error in db connection The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","service":"user-service","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:237:11)\n    at NativeConnection.openUri (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at createDbConnection (file:///C:/Users/DELL/Desktop/Project/src/db/connection.js:6:24)\n    at file:///C:/Users/DELL/Desktop/Project/server.js:13:1\n    at ModuleJob.run (node:internal/modules/esm/module_job:329:25)\n    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:644:26)\n    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"error","message":"error in db connection The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","service":"user-service","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:237:11)\n    at NativeConnection.openUri (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at createDbConnection (file:///C:/Users/DELL/Desktop/Project/src/db/connection.js:6:24)\n    at file:///C:/Users/DELL/Desktop/Project/server.js:13:1\n    at ModuleJob.run (node:internal/modules/esm/module_job:329:25)\n    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:644:26)\n    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"error","message":"error in password","service":"user-service"}
{"level":"info","message":"User is registered{\n  user_id: '110840fe-e012-404f-9ced-cd397e05a1ab',\n  blogs: [],\n  _id: new ObjectId('687fe87506b5a8b98e3f83dd'),\n  __v: 0\n}","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"error","message":"error in password","service":"user-service"}
{"level":"info","message":"Username already taken","service":"user-service"}
{"level":"info","message":"user already exists","service":"user-service"}
{"level":"info","message":"User is registered{\n  user_id: 'd3aa0a73-0344-44bd-9c00-833a3f8a5ac3',\n  blogs: [],\n  _id: new ObjectId('687fe98b0250231f1246a9a7'),\n  __v: 0\n}","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"error","message":"error in password","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"error","message":"error in password","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"error","message":"error in password","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"_original":{"email":"Hardik@gmail.com","name":"Hardik","password":"1234","phone":"12343"},"details":[{"context":{"key":"password","label":"password","regex":{},"value":"1234"},"message":"\"password\" with value \"1234\" fails to match the required pattern: /^(?=.*[a-z])(?=.*[A-Z])/","path":["password"],"type":"string.pattern.base"}],"level":"error","message":"Error in validation \"password\" with value \"1234\" fails to match the required pattern: /^(?=.*[a-z])(?=.*[A-Z])/","service":"user-service","stack":"ValidationError: \"password\" with value \"1234\" fails to match the required pattern: /^(?=.*[a-z])(?=.*[A-Z])/"}
{"level":"error","message":"error in password","service":"user-service"}
{"_original":{"email":"Hardik@gmail.com","name":"Hardik","password":"hardik@1234","phone":"12343"},"details":[{"context":{"key":"password","label":"password","regex":{},"value":"hardik@1234"},"message":"\"password\" with value \"hardik@1234\" fails to match the required pattern: /^(?=.*[a-z])(?=.*[A-Z])/","path":["password"],"type":"string.pattern.base"}],"level":"error","message":"Error in validation \"password\" with value \"hardik@1234\" fails to match the required pattern: /^(?=.*[a-z])(?=.*[A-Z])/","service":"user-service","stack":"ValidationError: \"password\" with value \"hardik@1234\" fails to match the required pattern: /^(?=.*[a-z])(?=.*[A-Z])/"}
{"level":"error","message":"error in password","service":"user-service"}
{"_original":{"email":"Hardik@gmail.com","name":"Hardik","password":"hardik@1234","phone":"12343"},"details":[{"context":{"key":"password","label":"password","regex":{},"value":"hardik@1234"},"message":"\"password\" with value \"hardik@1234\" fails to match the required pattern: /^(?=.*[a-z])(?=.*[A-Z])/","path":["password"],"type":"string.pattern.base"}],"level":"error","message":"Error in validation \"password\" with value \"hardik@1234\" fails to match the required pattern: /^(?=.*[a-z])(?=.*[A-Z])/","service":"user-service","stack":"ValidationError: \"password\" with value \"hardik@1234\" fails to match the required pattern: /^(?=.*[a-z])(?=.*[A-Z])/"}
{"level":"error","message":"error in password","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"_original":{"email":"Hardik@gmail.com","name":"Hardik","password":"hardik@1234","phone":"12343"},"details":[{"context":{"key":"password","label":"password","regex":{},"value":"hardik@1234"},"message":"\"password\" with value \"hardik@1234\" fails to match the required pattern: /^[a-zA-Z0-9]{3,30}$/","path":["password"],"type":"string.pattern.base"}],"level":"error","message":"Error in validation \"password\" with value \"hardik@1234\" fails to match the required pattern: /^[a-zA-Z0-9]{3,30}$/","service":"user-service","stack":"ValidationError: \"password\" with value \"hardik@1234\" fails to match the required pattern: /^[a-zA-Z0-9]{3,30}$/"}
{"level":"error","message":"error in password","service":"user-service"}
{"level":"error","message":"error in password","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"error","message":"error in password","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"User is registered{\n  user_id: '4cf6f25f-0b7a-44c9-a917-f06574a7fc54',\n  username: 'Hardik',\n  password: '$2b$10$Pn/ijFZvhtpmuG30ImNUPuSPTZccjXRXVhieI9Zpus.5y/eBr/Ypq',\n  email: 'Hardik@gmail.com',\n  phone: '12343',\n  blogs: [],\n  _id: new ObjectId('68806277716fd34a4b3801a8'),\n  __v: 0\n}","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"User is registered{\n  user_id: '4e52fe69-c235-4294-8a24-46738e7c2c6f',\n  username: 'Prateek',\n  password: '$2b$10$jcgFPtLYaUtK14VNbc3GUeZLOy/ZdfCTIInfhzSFhpQ2GiWP3MyXm',\n  email: 'Prateek@gmail.com',\n  blogs: [],\n  _id: new ObjectId('688067746e9cb556d7cc1467'),\n  __v: 0\n}","service":"user-service"}
{"level":"info","message":"User is registered{\n  user_id: '86d71ffd-a139-44f6-9d8c-adc26d972abf',\n  username: 'Sher',\n  password: '$2b$10$6lFXNKK6PRbdqfuKPOIH2.6SsW8hY9LUksxh9iOsvx/J4k4qOqeKq',\n  email: 'Sher@gmail.com',\n  blogs: [],\n  _id: new ObjectId('688067996e9cb556d7cc146b'),\n  __v: 0\n}","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Logged user Sher and generated token is eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI4NmQ3MWZmZC1hMTM5LTQ0ZjYtOWQ4Yy1hZGMyNmQ5NzJhYmYiLCJpYXQiOjE3NTMyNDkwMTEsImV4cCI6MTc1MzI1NjIxMX0.LJpO9nnTaexX4y0qgWCfFtP4FcFkpkMnwyaK57rQse8","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Logged user Sher and generated token is eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI4NmQ3MWZmZC1hMTM5LTQ0ZjYtOWQ4Yy1hZGMyNmQ5NzJhYmYiLCJpYXQiOjE3NTMyNTI0MzcsImV4cCI6MTc1MzI1OTYzN30.DonDWhj4qQx-0LgRnkQaz4Burof04LkprGwe8Zbq4nA","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Logged user Hardik and generated token is eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI0Y2Y2ZjI1Zi0wYjdhLTQ0YzktYTkxNy1mMDY1NzRhN2ZjNTQiLCJpYXQiOjE3NTMyODEzMTIsImV4cCI6MTc1MzI4ODUxMn0.VDVnu07aB3W3i5Nq-5sJOMkMHd2MiCWXUM_sSs9rJtU","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"_message":"blogs validation failed","errors":{"user_id":{"kind":"string","message":"Cast to string failed for value \"{\n  userId: '4cf6f25f-0b7a-44c9-a917-f06574a7fc54',\n  iat: 1753281312,\n  exp: 1753288512\n}\" (type Object) at path \"user_id\"","name":"CastError","path":"user_id","reason":null,"stringValue":"\"{\n  userId: '4cf6f25f-0b7a-44c9-a917-f06574a7fc54',\n  iat: 1753281312,\n  exp: 1753288512\n}\"","value":{"exp":1753288512,"iat":1753281312,"userId":"4cf6f25f-0b7a-44c9-a917-f06574a7fc54"},"valueType":"Object"}},"level":"error","message":"Error in blog creation blogs validation failed: user_id: Cast to string failed for value \"{\n  userId: '4cf6f25f-0b7a-44c9-a917-f06574a7fc54',\n  iat: 1753281312,\n  exp: 1753288512\n}\" (type Object) at path \"user_id\"","service":"user-service","stack":"ValidationError: blogs validation failed: user_id: Cast to string failed for value \"{\n  userId: '4cf6f25f-0b7a-44c9-a917-f06574a7fc54',\n  iat: 1753281312,\n  exp: 1753288512\n}\" (type Object) at path \"user_id\"\n    at Document.invalidate (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongoose\\lib\\document.js:3354:32)\n    at model.$set (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongoose\\lib\\document.js:1480:12)\n    at model.$set (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongoose\\lib\\document.js:1132:16)\n    at model.Document (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongoose\\lib\\document.js:178:12)\n    at model.Model (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongoose\\lib\\model.js:127:12)\n    at new model (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongoose\\lib\\model.js:4837:15)\n    at createBlog (file:///C:/Users/DELL/Desktop/Project/src/modules/Blogs/controller/blog-controller.js:17:12)\n    at Layer.handleRequest (C:\\Users\\DELL\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\DELL\\node_modules\\router\\lib\\route.js:157:13)\n    at authMiddleware (file:///C:/Users/DELL/Desktop/Project/src/modules/auth/controller/middlewares/auth-middleware.js:17:3)"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"cause":{"beforeHandshake":false,"errorLabelSet":{}},"errorLabelSet":{},"level":"error","message":"Error in blog creation getaddrinfo ENOTFOUND ac-da2otel-shard-00-00.0hm9auy.mongodb.net","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":{"$oid":"7fffffff000000000000001b"},"maxSetVersion":1,"servers":{"ac-da2otel-shard-00-00.0hm9auy.mongodb.net:27017":{"$clusterTime":null,"address":"ac-da2otel-shard-00-00.0hm9auy.mongodb.net:27017","arbiters":[],"electionId":null,"error":{"beforeHandshake":false,"errorLabelSet":{}},"hosts":[],"iscryptd":false,"lastUpdateTime":1133305161,"lastWriteDate":0,"logicalSessionTimeoutMinutes":null,"maxBsonObjectSize":null,"maxMessageSizeBytes":null,"maxWireVersion":0,"maxWriteBatchSize":null,"me":null,"minRoundTripTime":0,"minWireVersion":0,"passives":[],"primary":null,"roundTripTime":-1,"setName":null,"setVersion":null,"tags":{},"topologyVersion":null,"type":"Unknown"},"ac-da2otel-shard-00-01.0hm9auy.mongodb.net:27017":{"$clusterTime":null,"address":"ac-da2otel-shard-00-01.0hm9auy.mongodb.net:27017","arbiters":[],"electionId":null,"error":{"beforeHandshake":false,"errorLabelSet":{}},"hosts":[],"iscryptd":false,"lastUpdateTime":1133305162,"lastWriteDate":0,"logicalSessionTimeoutMinutes":null,"maxBsonObjectSize":null,"maxMessageSizeBytes":null,"maxWireVersion":0,"maxWriteBatchSize":null,"me":null,"minRoundTripTime":0,"minWireVersion":0,"passives":[],"primary":null,"roundTripTime":-1,"setName":null,"setVersion":null,"tags":{},"topologyVersion":null,"type":"Unknown"},"ac-da2otel-shard-00-02.0hm9auy.mongodb.net:27017":{"$clusterTime":null,"address":"ac-da2otel-shard-00-02.0hm9auy.mongodb.net:27017","arbiters":[],"electionId":null,"error":{"beforeHandshake":false,"errorLabelSet":{}},"hosts":[],"iscryptd":false,"lastUpdateTime":1133305164,"lastWriteDate":0,"logicalSessionTimeoutMinutes":null,"maxBsonObjectSize":null,"maxMessageSizeBytes":null,"maxWireVersion":0,"maxWriteBatchSize":null,"me":null,"minRoundTripTime":0,"minWireVersion":0,"passives":[],"primary":null,"roundTripTime":-1,"setName":null,"setVersion":null,"tags":{},"topologyVersion":null,"type":"Unknown"}},"setName":"atlas-3gdv45-shard-0","stale":false,"type":"ReplicaSetNoPrimary"},"service":"user-service","stack":"MongoServerSelectionError: getaddrinfo ENOTFOUND ac-da2otel-shard-00-00.0hm9auy.mongodb.net\n    at Topology.selectServer (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongodb\\lib\\sdam\\topology.js:326:38)\n    at async tryOperation (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:192:22)\n    at async executeOperation (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongodb\\lib\\collection.js:157:16)"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"blog made by user with userid 4cf6f25f-0b7a-44c9-a917-f06574a7fc54 blog:{\n  user_id: '4cf6f25f-0b7a-44c9-a917-f06574a7fc54',\n  blog_id: '473b18c1-0bd7-4509-a5b9-dcb0171e6140',\n  blog_title: 'Web development',\n  blog_content: 'MERN stack',\n  likes: '0',\n  comments: [],\n  _id: new ObjectId('6880fa919adc5647ccde407b'),\n  __v: 0\n}","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"_message":"users validation failed","errors":{"blogs":{"kind":"embedded","message":"Cast to embedded failed for value \"1\" (type number) at path \"blogs\" because of \"ObjectParameterError\"","name":"CastError","path":"blogs","reason":{},"stringValue":"\"1\"","value":1,"valueType":"number"}},"level":"error","message":"Error in blog creation users validation failed: blogs: Cast to embedded failed for value \"1\" (type number) at path \"blogs\" because of \"ObjectParameterError\"","service":"user-service","stack":"ValidationError: users validation failed: blogs: Cast to embedded failed for value \"1\" (type number) at path \"blogs\" because of \"ObjectParameterError\"\n    at Document.invalidate (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongoose\\lib\\document.js:3354:32)\n    at model.$set (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongoose\\lib\\document.js:1480:12)\n    at model.set [as blogs] (C:\\Users\\DELL\\Desktop\\Project\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at createBlog (file:///C:/Users/DELL/Desktop/Project/src/modules/Blogs/controller/blog-controller.js:31:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)"}
{"level":"info","message":"Server is running on port 3000","service":"user-service"}
{"level":"info","message":"Connection created successfully","service":"user-service"}
{"level":"info","message":"blog made by user with userid 4cf6f25f-0b7a-44c9-a917-f06574a7fc54 blog:{\n  user_id: '4cf6f25f-0b7a-44c9-a917-f06574a7fc54',\n  blog_id: 'd219b5a8-1dc0-498f-a286-634867de9117',\n  blog_title: 'Web development',\n  blog_content: 'MERN stack',\n  likes: '0',\n  comments: [],\n  _id: new ObjectId('6881079577b006b7a696745c'),\n  __v: 0\n}","service":"user-service"}
